#!/bin/bash

set -e -u -o pipefail
. /usr/local/lib/bash/shflags
. /usr/local/lib/bash/tei-bash-lib

DEFINE_string 'version' '' 'Version to deploy, e.g. af99e8e1a9, latest' 'v'
DEFINE_boolean 'skip_confirmation' false 'Skip deploy confirmation prompt' 'y'
FLAGS_HELP="USAGE: $(basename $0) [flags]

Deploy a new version of teiserver by selecting from the available builds.
"
FLAGS "$@" || exit $?
_tei_ensure_root "$@"
eval set -- "${FLAGS_ARGV}"

cd $_TEI_INSTALL_DIR
_tei_lock_deploy

ver="${FLAGS_version}"
if [[ -z "$ver" ]]; then
    ver=$(_tei_select_version)
fi
selected="$(_tei_resolve_version "$ver")"

if [[ -L live && $(readlink live) == "ver-$selected" ]]; then
    gum style --bold "Selected version $selected is already deployed"
    exit 0
fi

gum style --bold "Selected version $selected, build info:"
cat "ver-$selected/build-info.json" | jq

if [[ "${FLAGS_skip_confirmation}" == "${FLAGS_FALSE}" ]] \
  && ! gum confirm "Are to sure to deploy version $selected?"; then
    gum style --bold "Deployment cancelled"
    exit 0
fi

gum style --bold "Deploying version $selected"

# If we are reploying the rollback version, remove the rollback link
if [[ -L rollback && $(readlink rollback) == "ver-$selected" ]]; then
    rm rollback
elif [[ -L live ]]; then
    ln -sfT $(readlink live) rollback
fi
ln -sfT "ver-$selected" live

gum spin --title "Restarting teiserver..." -- systemctl restart teiserver
gum style --bold "Done"
