#!/bin/bash

set -e -u -o pipefail
. /usr/local/lib/bash/shflags
. /usr/local/lib/bash/tei-bash-lib

DEFINE_string 'version' '' 'Version to tag, e.g. af99e8e1a9, latest' 'v'
DEFINE_string 'tag' '' 'Name of the tag to apply' 't'
DEFINE_boolean 'force' false 'Overwrite existing tag without prompting' 'f'
FLAGS_HELP="USAGE: $(basename $0) [flags]

Tag a teiserver release.
"
FLAGS "$@" || exit $?
_tei_ensure_root "$@"
eval set -- "${FLAGS_ARGV}"

cd $_TEI_INSTALL_DIR
_tei_lock_deploy

tag="${FLAGS_tag}"
if [[ -z "$tag" ]]; then
    tag="$(gum input --placeholder="Tag name...")"
fi
if [[ ! "$tag" =~ ^[a-z0-9_.-]{1,20}$ ]]; then
    gum style --bold 'Tag name must match ^[a-z0-9_.-]{1,20}$' >&2
    exit 1
elif [[ "$tag" =~ ^ver-.*|latest|live|rollback$ ]]; then
    gum style --bold "Tag name can't start with ver- or be special ones: latest, live, rollback" >&2
    exit 1
fi

if [[ -z "${FLAGS_version}" ]]; then
    ver=$(_tei_select_version)
else
    ver="${FLAGS_version}"
fi
version="$(_tei_resolve_version "$ver")"

if [[ -L $tag && "${FLAGS_force}" == "${FLAGS_FALSE}" ]] \
  && ! gum confirm "Tag $tag already used, override?"; then
    exit 0
fi

ln -sfT "ver-$version" $tag

gum style --bold "Tagged version $version as $tag"
