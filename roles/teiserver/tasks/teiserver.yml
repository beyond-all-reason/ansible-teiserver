---
- name: Ensure /usr/local/lib/bash exists
  ansible.builtin.file:
    path: /usr/local/lib/bash
    state: directory
    mode: '0755'
- name: Install shflags for tei-* scripts
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/kward/shflags/96694d58ce92065fdd8f8761d930765cb9a8d066/shflags'
    checksum: 'sha256:ce5f13d6e6c83a5ba0871ba56d52980a87c2a4d7f9d93831feaa12bc10ee2e0f'
    dest: '/usr/local/lib/bash/shflags'
    mode: '0644'
- name: Install tei-bash-lib
  ansible.builtin.copy:
    src: 'tei-bash-lib.sh'
    dest: '/usr/local/lib/bash/tei-bash-lib'
    mode: '0644'
- name: Install tei-* scripts
  ansible.builtin.copy:
    src: 'scripts/{{ item }}'
    dest: '/usr/local/bin/tei-{{ item }}'
    mode: '0755'
  loop:
    - rel-build
    - rel-delete
    - rel-deploy
    - rel-list
    - rel-tag
    - rel-untag
    - repo-apply-prod-data
    - repo-pull
- name: Setup teiserver source and configs
  become_user: deploy
  block:
    - name: Ensure teiserver is cloned
      ansible.builtin.git:
        repo: 'https://github.com/beyond-all-reason/teiserver.git'
        dest: /home/deploy/teiserver-repo
        update: false
    - name: Create directory for prod files
      ansible.builtin.file:
        path: /home/deploy/prod-data
        state: directory
        mode: '0755'
    - name: Write readme file
      ansible.builtin.copy:
        content: All files in this directory are generated by ansible. Do not edit them manually.
        dest: /home/deploy/prod-data/README
        mode: '0644'
    - name: Write prod secrets file
      ansible.builtin.template:
        src: prod.secret.exs.j2
        dest: /home/deploy/prod-data/prod.secret.exs
        mode: '0644'
      register: prod_secret_file
    - name: Write vm.args file
      ansible.builtin.copy:
        src: vm.args.eex
        dest: /home/deploy/prod-data/vm.args.eex
        mode: '0644'
      register: vm_args_file
    - name: Download fontawesome
      ansible.builtin.get_url:
        url: '{{ fontawesome_url }}'
        dest: /home/deploy/prod-data/fontawesome.zip
        checksum: '{{ fontawesome_checksum }}'
        mode: '0644'
      register: fontawesome_file
    - name: Install docker build script
      ansible.builtin.template:
        src: teiserver.Dockerfile.j2
        dest: /home/deploy/teiserver.Dockerfile
        mode: '0644'
    - name: Apply prod data
      ansible.builtin.command: tei-repo-apply-prod-data /home/deploy/teiserver-repo
      when: prod_secret_file.changed or vm_args_file.changed or fontawesome_file.changed
- name: Add teiserver user
  ansible.builtin.user:
    name: teiserver
    shell: /sbin/nologin
    home: /var/lib/teiserver
    groups:
      - ssl-cert
    append: true
- name: Create teiserver installation directory
  ansible.builtin.file:
    path: /opt/teiserver
    mode: '0755'
    state: directory
- name: Create teiserver logs directory
  ansible.builtin.file:
    path: /var/log/teiserver
    owner: teiserver
    group: teiserver
    mode: '0755'
    state: directory
- name: Install teiserver service
  ansible.builtin.copy:
    src: teiserver.service
    dest: /etc/systemd/system/teiserver.service
    mode: '0644'
- name: Enable teiserver service
  ansible.builtin.systemd:
    name: teiserver.service
    enabled: true
    daemon_reload: true
